<template>
	<div class="content" v-loadmore="loadMore" is-enable-scroll="isLoading">
		<ul>
			<li v-for="(item,index) in goodsList" class="list"  @click.prevent="goGoodsDetail(item.spuid)" :key="index">
				<img v-lazy="{src: item.goodslistpicurl,loading: 'https://devimg.manjd.net/default/200-200/2017101.png'}">
				<p>{{item.goodsname}}</p>
				<div class="price">
					<span>¥{{item.goodsprice}}</span>
					<span>赚¥{{item.totalrows}}</span>
				</div>
			</li>
		</ul>
		<div class="loading-container" v-if="isShowMore">
			<template v-if="!isLoadOver">
				<span class="loading-icon"></span>
				<span class="loading-txt">加载中...</span>
			</template>
			<template v-else>
				<span class="loading-txt">没有更多了</span>
			</template>
		</div>
	</div>
</template>

<script>
	import { Active } from '@/apis';
	import loadmore from '@/components/common/loadmore';
	import Indicator from '@/components/common/indicator';
	import { getAppType, InitBridge } from '@/utils/common';
	import '@/assets/styles/common';
	export default {
		data(){
			return {
				appVersion:'',
				tabid:1,
				isShowMore: !1,
				isLoadOver: !1,
				isLoading: !1,
				goodsList: [],
				page: 1,
				perPage: 10,
				h5headtitle: '', //title
				h5backgroundpic: [] //背景图片url地址
			}
		},
		methods:{
			init(){
				var that = this;
				this.appVersion = getAppType();
				this.isIniting = !0;
				this.isShowMore = !1;
				// 卖家版活动标签(分类)页面商品列表获取 code 1 成功 -1 失败 -2 参数错误
				this.getGoodList().then(res=>{
					if(res.code != 1){
						return false;
					}
					let list = res && res.data;
					that.isShowMore = !0;
					that.isIniting = !1;
					that.isLoadOver = list.length < this.perPage;
					that.goodsList = list;
					Indicator.close();
				}).catch(err=>{
					that.isIniting = !1;
					Indicator.close();
				});
			},
			getGoodList(){
				const tabid = this.getQueryString('tabid');
				this.tabid = tabid;
				const page = this.page;
				const perPage = this.perPage;
				return Active.getAllGoods(tabid, page, perPage)
			},
			getQueryString(name) {
				var result = window.location.search.match(new RegExp("[\?\&]" + name + "=([^\&]+)", "i"));
				if (result == null || result.length < 1) {
					return "";
				}
				return result[1];
			},
			loadMore(){
				var that = this;
				if (this.isLoadOver || this.isIniting) {
					return;
				}
				this.isLoading = !0;
				this.page++;
				this.getGoodList().then(res => {
					that.isLoading = !1;
					if(res.code !== 1){
						return;
					}
					const list = res.data;
					that.isLoadOver = list.length < that.perPage;
					that.goodsList.push(...list);
				}).catch(err => {
					that.isLoading = !1;
					console.log(err);
				})
			},

			// 跳转商品详情
            goGoodsDetail(spuid) {
                let that = this;
                try {
                    InitBridge(function (bridge) {
                        if (that.appVersion === 'ios') {
                            bridge.callHandler('goToGoodsDetailMethod', spuid, function (data) { });
                        } else {
                            bridge.goToGoodsDetailMethod(spuid);
                        }
                    }); 
                } catch (error) {
                    
                }
            }
		},
		directives:{
			loadmore
		},
		created(){
			Indicator.show('加载中...');
		},
		mounted(){
			this.init();
		}
	}
</script>

<style>
	@import '../../../assets/styles/mixins.css';

	.content{
		width: 7.16rem;
		margin: .32rem auto;
		background: #fff;
	}
	.content ul{
		display: -webkit-flex;
		display: flex;
		flex-wrap: wrap;
	}
	.content .list{
		width: 3.28rem;
		margin: .15rem;
		font-size: .26rem;
	}
	.content .list img{
		width: 3rem;
		height:3rem;
	}
	.content .list p{
		margin: .24rem 0 .28rem;
		line-height: .34rem;
		min-height: .68rem;
	}
	.content .list .price span:last-child{
		margin-left: .26rem;
		font-size: .24rem;
		color: #FF681D;
	}

</style>